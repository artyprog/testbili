'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleError = handleError;
exports.getDocRef = getDocRef;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function logError(message) {
  console.error('ðŸš¨ ', message);
}

function handleError(err) {
  process.exitCode = process.exitCode || 1;

  if (err.code === 'PLUGIN_ERROR') {
    logError(`Error found by ${err.plugin} plugin:`);
    if (err.codeFrame) {
      console.error(err.message);
      console.error(err.codeFrame);
    } else if (err.snippet) {
      console.error(err.message);
      console.error(err.snippet);
    } else {
      console.error(err.stack);
    }
    return;
  }

  if (err.message.includes('You must supply options.name for UMD bundles')) {
    return logError(`You must supply ${_chalk2.default.green('options.moduleName')} for UMD bundles, the easiest way is to use ${_chalk2.default.green('--moduleName')} flag.\n${getDocRef('api', 'modulename')}`);
  }

  if (err.name === 'BiliError') {
    return logError(err.message);
  }

  if (err.frame) {
    console.log(err.frame);
  }
  console.log(err.stack);
}

function getDocRef(page, id) {
  return _chalk2.default.dim(`ðŸ“–  https://egoist.moe/bili/#/${page}${id ? `?id=${id}` : ''}`);
}