'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBiliConfig = undefined;

let getBiliConfig = exports.getBiliConfig = (() => {
  var _ref = _asyncToGenerator(function* () {
    const useConfig = new _useConfig2.default({
      name: 'bili',
      files: ['package.json', '{name}.config.js', '.{name}rc']
    });

    var _ref2 = yield useConfig.load();

    const config = _ref2.config;

    return config;
  });

  return function getBiliConfig() {
    return _ref.apply(this, arguments);
  };
})();

exports.getBabelConfig = getBabelConfig;

var _useConfig = require('use-config');

var _useConfig2 = _interopRequireDefault(_useConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function getBabelConfig({ jsx }) {
  return {
    presets: [[require.resolve('./babel'), { jsx }]]
  };
}